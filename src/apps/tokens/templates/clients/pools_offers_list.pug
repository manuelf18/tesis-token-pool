extends base_landing
-load static utils

block extra_css
    link(href='{% static "pages/plugins/pace/pace-theme-flash.css" %}', rel='stylesheet', type='text/css')
    link(href='{% static "pages/css/pages-icons.css" %}', rel='stylesheet', type='text/css')
    link(href='{% static "css/pools/list.css" %}', rel='stylesheet', type='text/css')
    link(href='https://fonts.googleapis.com/css?family=Montserrat:300,400&display=swap', rel='stylesheet')


block content
    - csrf_token
    .main-cont.h-100
        .row
            .col-12
                h1 Ofertas de #{pool.tokenName}s
        .row
            .col-12
                if offers|length is 0
                    span#no-offers.m-t-30 No hay pozos disponibles
                #{offers}
                #{pool}
                each offer in offers
                    if offer.offeredAmount > 0
                        .flex.offer-card
                            .card.col-8.flex-horizontal-center
                                .card-body
                                    .row
                                        .col-sm-12.col-md-7.text-justify
                                            .row
                                                .title
                                                    span Oferta
                                            .row
                                                .sub-title
                                                    if offer.recentlyCreated
                                                        span.label.label-danger.m-r-10 Nueva oferta
                                                    span.label.label-info Creada: #{offer.createdAt}
                                        .col-sm-12.col-md-5.text-right
                                            span.qty-offers Precio: #{offer.offeredValue|currency}
                                            br
                                            span.qty-offers Cantidad de tokens: #{offer.offeredAmount}
                                            input.maxAmount(type="hidden", value='{{offer.offeredAmount}}')
                                            button.btn.btn-block.btn-warning.js-btn-getTokens(type='button', data-id='{{offer.id}}' data-key='{{offer.poolKey}}', data-value='{{offer.offeredValue}}', data-max-amount='{{offer.offeredAmount}}') Obtener tokens

    #modalSlideUp.modal.fade.slide-up.disable-scroll(tabindex="-1" role="dialog" aria-hidden="false")
        .modal-dialog
            .modal-content-wrapper
                .modal-content
                    .modal-header.clearfix.text-left
                        button.close(type="button" data-dismiss="modal" aria-hidden="true")
                            i.pg-close.fs-14
                        span.title Información adicional
                    .modal-body
                        form(role="form")
                            .form-group-attached
                                .row
                                    .col-md-12
                                        .form-group.form-group-default
                                            label Cantidad de tokens a retirar
                                            input#inputId(type="hidden",)
                                            input#inputValue(type="hidden",)
                                            input#maxAmount(type="hidden",)
                                            input#inputKey(type="hidden",)
                                            input#inputAmount.form-control(type="number", value=1)
                                .row
                                    .col-md-12
                                        .form-group.form-group-default
                                            label Nombre de la tarjeta
                                            input#ccName.form-control(type="text", placeholder='Juan Pérez')                                        
                                .row
                                    .col-md-8
                                        .form-group.form-group-default
                                            label Número de tarjeta
                                            input#ccNumber.form-control(type="text", placeholder='0000-0000-0000-0000')
                                    .col-md-4
                                        .form-group.form-group-default
                                            label Codigo de seguridad
                                            input#cvc.form-control(type="number", placeholder='123')
                        .row
                            .col-md-8
                                .p-t-20.clearfix.p-l-10.p-r-10
                                    .pull-left
                                        p.bold.font-montserrat.text-uppercase TOTAL
                                    .pull-right
                                        p.bold.font-montserrat.text-uppercase.text-total $0.00
                            .col-md-4.m-t-10.sm-m-t-10
                                button.btn.btn-primary.btn-block.js-btn-pay.m-t-5(type="button") Pagar
block extra_js
    script(src="https://cdn.jsdelivr.net/gh/ethereum/web3.js@1.0.0-beta.34/dist/web3.min.js")
    script(src='{% static "js/Contract.js" %}')
    script(src="{% static 'pages/plugins/sweetalert/sweetalert.min.js' %}")

    script.
        (function (){
            var App = {
                Controls: {
                    getTokensBtn: $('.js-btn-getTokens'),
                    btnPay: $('.js-btn-pay'),
                    inputModal: $('#modalSlideUp'),
                    inputValue: $('#inputValue'),
                    inputAmount: $('#inputAmount'),
                    maxAmount: $('#maxAmount'),
                    inputKey: $('#inputKey'),
                    totalText: $('.text-total'),
                },
                Methods: {
                    init: function(){
                        App.Methods.bindEvents();
                    },
                    bindEvents: function(){
                        App.Controls.getTokensBtn.on('click', App.Events.onGetTokensBtnClick);
                        App.Controls.inputModal.on('shown.bs.modal', App.Events.onInputModalShow);
                        App.Controls.inputAmount.on('change', App.Events.calculateTotal);
                        App.Controls.btnPay.on('click', App.Events.onBtnPayClick);
                    },
                },
                Events: {
                    onGetTokensBtnClick: async function(){
                        try {
                            const key = $(this).data('key');
                            const value = $(this).data('value');
                            const maxAmount = $(this).data('max-amount');
                            App.Controls.inputValue.val(value);
                            App.Controls.inputKey.val(key);
                            App.Controls.maxAmount.val(maxAmount);
                            App.Controls.inputModal.modal('show');
                        } catch(e){
                            console.error(e);
                        }
                    },
                    onInputModalShow: function(e){
                        App.Controls.inputAmount.val(1);
                        App.Events.calculateTotal(e);
                    },
                    calculateTotal: function(e){
                        const value = parseFloat(App.Controls.inputValue.val());
                        const amount = parseFloat(App.Controls.inputAmount.val());
                        App.Controls.totalText.text(`B/.${(value * amount).toFixed(2)}`);
                    },
                    onBtnPayClick: async function(e){
                        const value = App.Controls.inputValue.val();
                        const key = App.Controls.inputKey.val();
                        const amount = App.Controls.inputAmount.val();
                        const maxAmount = $('#maxAmount').val();
                        const ccName = $('#ccName').val();
                        const ccNumber = $('#ccNumber').val();
                        const cvc = $('#cvc').val();
                        try{
                            App.Validations.validateAmount(amount, maxAmount);
                            App.Validations.validateCCInfo(ccName, ccNumber, cvc);
                            const web3 = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider('http://127.0.0.1:7545'));
                            const accounts = await web3.eth.getAccounts();
                            const account = accounts[0];
                            App.Requests.getTokens({amount, key, ccName, ccNumber, cvc, account});
                        } catch(e){
                            console.error(e);
                            Swal.fire({type: 'error', title: e.toString()})
                        }
                    },
                },
                Requests: {
                    getTokens: function(data){
                        return $.ajax({
                            method: 'POST',
                            url: '{% url "tokens:pay-withdraw" %}',
                            data
                        });
                    },
                },
                Validations: {
                    validateAmount: function(value, maxAmount){
                        if(!value || !maxAmount)
                            throw Error('Datos imcompletos');
                        else if(value > maxAmount)
                            throw Error('No es número valido de tarjeta');
                    },
                    validateCCInfo: function(ccName, ccNumber, cvc){
                        if(!ccName || !ccNumber || !cvc)
                            throw Error('Datos imcompletos');
                        const reg = /^(\d{4}[- ]){3}\d{4}|\d{16}$/;
                        if(!reg.test(ccNumber))
                            throw Error('No es número valido de tarjeta');
                        else if(cvc.length > 3 || cvc.length <= 0)
                            throw Error('No es un codigo de seguridad valido');
                    },
                },
            }
            App.Methods.init();
        })()
