extends base_landing
-load static

block extra_css
    link(href='{% static "pages/plugins/pace/pace-theme-flash.css" %}', rel='stylesheet', type='text/css')
    link(href='{% static "pages/css/pages-icons.css" %}', rel='stylesheet', type='text/css')

    style.
        .card-body > h2, h4, h5{
            font-weight: 400;
        }
        .title{
            font-size: 20px;
        }
        .subtitle{
            font-family: 'Montserrat', sans-serif;
            font-size: 18px;
            font-weight: 300;
            margin-left: 5px;
            color: green;
        }
        .main-cont{
            margin-top: 5rem;
            margin-bottom: 10rem;
        }


block content
    .container.h-100.main-cont
        .row
            .col-12
                .text-center
                    h1 Datos del Pozo
        .row.mt-4
            .col-sm-12.col-lg-6
                .card.card-default(style='width: 100%')
                    .card-body
                        h2
                            .pool-name
                        .labels
                            span.label.label-success abierto
                        hr
                        span.title Nombre del Token
                        span.subtitle.subtitle-token-name
                        br
                        span.title Valor:
                        span.subtitle.subtitle-value
                        br
                        span.title Cantidad de Tokens en el Pozo:
                        span.subtitle.subtitle-qty
            .col-sm-12.col-lg-6
                    .card.card-default
                        ul.nav.nav-tabs.nav-tabs-simple.d-none.d-md-flex.d-lg-flex.d-xl-flex(role='tablist', data-init-reponsive-tabs='dropdownfx')
                            li.nav-item.nav-item-buy
                                a.active.show(data-toggle='tab', role='tab', data-target='#tab2buy', href='#', aria-selected='true') Depositar
                            li.nav-item.nav-item-sell
                                a(href='#', data-toggle='tab', role='tab', data-target='#tab2sell', aria-selected='false') Retirar 
                        .tab-content
                            #tab2buy.tab-pane.active.show
                                p
                                | En este panel puede depositar una cantidad de tokens dentro del pozo
                                .form-group.mt-2
                                    label(for='qty') Cantidad
                                    input#qty_deposit.form-control(type="number", name="qty")
                                .form-group.float-right
                                    button.btn.btn-success.btn-js-deposit(type='button') Depositar
                            #tab2sell.tab-pane
                                p
                                | En este panel puede retirar una cantidad de tokens dentro del pozo
                                .form-group.mt-2
                                    label(for='qty') Cantidad
                                    input#qty_withdraw.form-control(type="number", name="qty")
                                .form-group.float-right
                                    button.btn.btn-success.btn-js-withdraw(type='button') Retirar


block extra_js
    script(src="https://cdn.jsdelivr.net/gh/ethereum/web3.js@1.0.0-beta.34/dist/web3.min.js")
    script(src='{% static "pages/plugins/modernizr.custom.js" %}', type='text/javascript')
    script(src='{% static "pages/js/pages.min.js" %}')
    script(src='{% static "pages/js/scripts.js" %}')

    script(src='{% static "js/Contract.js" %}')
    script.
        (function(){
            var App = {
                Controls:{
                    contract: null,
                },
                init: function(){
                    App.initEvents();
                    App.bindEvents();
                },
                initEvents: async function(){
                    try{
                        await App.Events.initContract();
                        await App.Events.initData();
                    }
                    catch(e){
                        Swal.fire({type:'error', title:e});
                    }
                },
                bindEvents: function(){
                    $('.btn-js-deposit').on('click', App.eventListeners.onBtnDepositClick);
                    $('.btn-js-withdraw').on('click', App.eventListeners.onBtnWithdrawClick);
                },
                eventListeners: {
                    onBtnDepositClick: async function(ev){
                        try{
                            const index = parseInt(`${ {{id}} }`) - 1;
                            const qty = $('#qty_deposit').val();
                            const tokenName = $('.subtitle-token-name').text();
                            const networkId = 5777;
                            const poolAddress = App.Controls.contract.address;
                            let resp = await App.Requests.getContractJSON(tokenName);
                            const { abi } = resp
                            const { address } = resp['networks'][networkId];
                            const contract = new TokenContract(abi, networkId, address);
                            await contract.setContract();
                            await contract.approve(poolAddress, qty);
                            await App.Controls.contract.addUserToPool(qty, index);
                            await App.Requests.payUserForPool({qty, user_address: App.Controls.contract.accounts[0]});
                            Swal.fire({type:'success', title: `Ha depositado ${qty} tokens, y ha recibido su pago`});
                        }
                        catch(e){
                            throw e;
                        }
                    },
                    onBtnWithdrawClick: async function(ev){
                        try{
                            const address = App.Controls.contract.accounts[0];
                            const token_qty = $('#qty_withdraw').val();
                            const data = {
                                pool_index: `${ {{id}} - 1 }`,
                                token_qty,
                                user_address: address
                            };
                            const resp = await App.Requests.sendWithdrawRequest(data);
                            Swal.fire({type:'success', title: `Ha retirado ${token_qty} tokens, y ha recibido su pago`});
                        }
                        catch(e){
                            console.log(e);
                            Swal.fire({type: 'error', title: e});
                        }
                    },
                },
                Events:{
                    initContract: async function(){
                        try{
                            const networkId = 5777;
                            let resp = await App.Requests.getContractJSON('PoolManager');
                            const { abi } = resp
                            const { address } = resp['networks'][networkId];
                            const contract = new PoolContract(abi, networkId, address);
                            await contract.setContract();
                            App.Controls.contract = contract;
                        }
                        catch(e){
                            throw e;
                        }
                    },
                    initData: async function(){
                        try{
                            const poolData = await App.Methods.getPool({{id}});
                            $('.pool-name').text(poolData[1]);
                            $('.subtitle-token-name').text(poolData[0]);
                            const value = `$${parseFloat(poolData[4]).toFixed(2)}`;
                            $('.subtitle-value').text(value);
                            $('.subtitle-qty').text(poolData[2]);
                            if (poolData['6'])
                                $('.labels').append('<span class="label label-success">Introdujo</span>');
                            if (poolData['2'] <= 0 /* || poolData['6'] */){
                                console.log('hola');
                                $('.nav-item-sell').hide();
                            }
                        }
                        catch(e){
                            console.log('There was an error');
                        }
                    }
                },
                Methods:{
                    getPool: function(id){
                        return App.Controls.contract.getPool(id - 1);
                    }
                },
                Requests: {
                    getContractJSON: function(contractName){
                        return $.ajax({
                            method: 'GET',
                            url: `/static/json/${contractName}.json`
                        });
                    },
                    sendWithdrawRequest: function(data){
                        return $.ajax({
                            method: 'POST',
                            url: '{% url "tokens:pay-withdraw" %}',
                            data
                        });
                    },
                    payUserForPool: function(data){
                        return $.ajax({
                            method: 'POST',
                            url: '{% url "tokens:pay-deposit" %}',
                            data
                        });  
                    }
                },
            }
            App.init();
        })()