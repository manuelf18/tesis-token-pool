extends base_landing
-load static

block extra_css
    link(href='{% static "pages/plugins/pace/pace-theme-flash.css" %}', rel='stylesheet', type='text/css')
    //link(href='{% static "pages/css/pages.css" %}', rel='stylesheet', type='text/css')
    //link(href='{% static "pages/css/themes/light.min.css" %}', rel='stylesheet', type='text/css')
    link(href='{% static "pages/css/pages-icons.css" %}', rel='stylesheet', type='text/css')

    style.
        .card-body > h2, h4, h5{
            font-weight: 400;
        }
        .title{
            font-size: 20px;
        }
        .subtitle{
            font-family: 'Montserrat', sans-serif;
            font-size: 18px;
            font-weight: 300;
            margin-left: 5px;
            color: green;
        }
        .container-fluid-lg{
            margin: 5rem 0;
        }




block content
    .container.container-fluid.container-fluid-lg
        section#about.page-section.offset-lg-2
            .row
                .col-sm-12.col-lg-6
                    .card.card-default(style='width: 100%')
                        .card-body
                            h2 Datos del Pozo
                            span.label.label-success abierto
                            hr
                            span.title Nombre del Pozo:
                            span.subtitle.subtitle-name 
                            br
                            span.title Nombre del Token
                            span.subtitle.subtitle-token-name
                            br
                            span.title Valor:
                            span.subtitle.subtitle-value
                            br
                            span.title Cantidad de Tokens en el Pozo:
                            span.subtitle.subtitle-qty
                .col-sm-12.col-lg-6
                    .card.card-default
                        ul.nav.nav-tabs.nav-tabs-simple.d-none.d-md-flex.d-lg-flex.d-xl-flex(role='tablist', data-init-reponsive-tabs='dropdownfx')
                            li.nav-item
                                a.active.show(data-toggle='tab', role='tab', data-target='#tab2buy', href='#', aria-selected='true') Compras
                            li.nav-item
                                a(href='#', data-toggle='tab', role='tab', data-target='#tab2sell', aria-selected='false') Ventas 
                        .tab-content
                            #tab2buy.tab-pane.active.show
                                p
                                | En este panel puede adquirir una cantidad de tokens dentro del pozo
                                .form-group.mt-2
                                    label(for='qty') Cantidad
                                    input#qty.form-control(type="number", name="qty")
                                .form-group.float-right
                                    button.btn.btn-success.btn-js-buy(type='button') Adquirir
                            #tab2sell.tab-pane
                                p
                                | En este panel puede insertar una cantidad de tokens dentro del pozo
                                .form-group.mt-2
                                    label(for='qty') Cantidad
                                    input#qty.form-control(type="number", name="qty")
                                .form-group.float-right
                                    button.btn.btn-success.btn-js-buy(type='button') Depositar


block extra_js
    script(src="https://cdn.jsdelivr.net/gh/ethereum/web3.js@1.0.0-beta.34/dist/web3.min.js")
    script(src='{% static "pages/plugins/modernizr.custom.js" %}', type='text/javascript')
    script(src='{% static "pages/js/pages.min.js" %}')
    script(src='{% static "pages/js/scripts.js" %}')

    script(src='{% static "js/Contract.js" %}')
    script.
        (function(){
            var App = {
                Controls:{
                    contract: null,
                },
                init: function(){
                    App.initEvents();
                    App.bindEvents();
                },
                initEvents: async function(){
                    try{
                        await App.Events.initContract();
                        await App.Events.initData();
                    }
                    catch(e){
                        Swal.fire({type:'error', title:e});
                    }
                },
                bindEvents: function(){
                    $('.btn-js-buy').on('click', App.eventListeners.onBtnBuyClick);
                },
                eventListeners: {
                    onBtnBuyClick: async function(ev){
                        try{
                            const index = {{id}} - 1;
                            const qty = $('#qty').val();
                            const tokenName = $('.subtitle-token-name').text();
                            const networkId = 5777;
                            const poolAddress = App.Controls.contract.address;
                            console.log(poolAddress);
                            let resp = await App.Requests.getContractJSON(tokenName);
                            const { abi } = resp
                            const { address } = resp['networks'][networkId];
                            const contract = new TokenContract(abi, networkId, address);
                            await contract.setContract();
                            await contract.approve(poolAddress, qty);
                            await App.Controls.contract.addUserToPool(qty, index);
                        }
                        catch(e){
                            throw e;
                        }
                    }
                },
                Events:{
                    initContract: async function(){
                        try{
                            const networkId = 5777;
                            let resp = await App.Requests.getContractJSON('PoolManager');
                            const { abi } = resp
                            const { address } = resp['networks'][networkId];
                            const contract = new PoolContract(abi, networkId, address);
                            await contract.setContract();
                            App.Controls.contract = contract;
                        }
                        catch(e){
                            throw e;
                        }
                    },
                    initData: async function(){
                        try{
                            const poolData = await App.Methods.getPool({{id}});
                            $('.subtitle-name').text(poolData[1]);
                            $('.subtitle-token-name').text(poolData[0]);
                            $('.subtitle-address').text(poolData[3]);
                            const value = parseFloat(poolData[4]).toFixed(2);
                            $('.subtitle-value').text(value);
                            $('.subtitle-qty').text(poolData[2])
                        }
                        catch(e){
                            console.log('There was an error');
                        }
                    }
                },
                Methods:{
                    getPool: function(id){
                        return App.Controls.contract.getPool(id - 1);
                    }
                },
                Requests: {
                    getContractJSON: function(contractName){
                        return $.ajax({
                            method: 'GET',
                            url: `/static/json/${contractName}.json`
                        });
                    },
                },
            }
            App.init();
        })()