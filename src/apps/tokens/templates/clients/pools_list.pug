extends base_client
-load static

block extra_css
    link(href='{% static "pages/plugins/pace/pace-theme-flash.css" %}', rel='stylesheet', type='text/css')
    link(href='{% static "pages/css/pages-icons.css" %}', rel='stylesheet', type='text/css')
    link(href='{% static "css/pools/list.css" %}', rel='stylesheet', type='text/css')
    link(href='https://fonts.googleapis.com/css?family=Montserrat:300,400&display=swap', rel='stylesheet')

    style.
        #transactionList{
            margin-top: 15px;
        }
        #transactionList span{
            margin-left: 10px;
            font-size: 16px;
        }
        #transactionList .transaction-type{
            color: green;
            font-size: 16px;
        }

block content
    .row.h-100(style='background-color: #E6E7EF;')
        .col-12
            .main-cont(style='background-color: white;')
                .row
                    .col-8
                        h1 Lista de pozos
                        if pools|length is 0
                            span#no-offers.m-t-30 No hay pozos disponibles
                        each pool in pools
                            if pool.open
                                .flex.pool-list
                                    .card.col-12.flex-horizontal-center
                                        .card-body
                                            .row
                                                .col-sm-12.col-md-7.text-justify
                                                    .row
                                                        .title
                                                            span #{pool.poolName}
                                                    .row
                                                        .sub-title
                                                            span.label.label-info Abierto: #{pool.startDate}
                                                    .row.m-t-20.pr-md-3
                                                        span.info-data.qty-offers Valor actual del token: #{pool.tokenValue|currency}
                                                        br
                                                        span.info-data.qty-offers Cantidad de ofertas: #{pool.amountOfOffers}
                                                .col-sm-12.col-md-5.text-right
                                                    if pool.amountOfOffers > 0
                                                        a.btn.btn-block.m-t-20(href="{% url 'tokens:pools-offers-list' key=pool.key %}" style='background-color:#087CA7; color:white') Ver ofertas
                                                    a.btn.btn-danger.btn-block.m-t-20(href="{% url 'tokens:pools-offers-create' key=pool.key %}") Crear nueva oferta
                    .col-4#transactionList
                        h2 Transacciones recientes


block extra_js
    script(src="https://cdn.jsdelivr.net/gh/ethereum/web3.js@1.0.0-beta.34/dist/web3.min.js")
    script(src='{% static "js/Contract.js" %}')
    script(src="{% static 'pages/plugins/Datatables/datatables.min.js' %}", type='text/javascript')
    script(src="{% static 'pages/plugins/jquery-datatable/media/js/jquery.dataTables.min.js' %}", type='text/javascript')
    script(src="{% static 'pages/plugins/jquery-datatable/extensions/TableTools/js/dataTables.tableTools.min.js' %}", type='text/javascript')
    script(src="{% static 'pages/plugins/jquery-datatable/media/js/dataTables.bootstrap.js' %}", type='text/javascript')
    script(src="{% static 'pages/plugins/jquery-datatable/extensions/Bootstrap/jquery-datatable-bootstrap.js' %}", type='text/javascript')

    script.
        (function (){
            var App = {
                Controls: {
                    transactionList: $('#transactionList'),
                },
                init: async function(){
                    App.Methods.drawTransactions();
                    App.bindEvents();
                },
                bindEvents: function(){
                },
                eventListeners:{
                },
                Methods: {
                    drawTransactions: async function(){
                        try{
                            const accounts = await App.Methods.getAccounts();
                            const transaccions = await App.Requests.getTransctionsByAccount(accounts[0]);
                            if(!transaccions || transaccions.length === 0){
                                App.Controls.transactionList.append('<span>No hay registros</span>')
                            }
                            for(const transaccion of transaccions){
                                if(transaccion.fields.transaction_type === 0)
                                    App.Controls.transactionList.append(`<span><label class='transaction-type info-data'>OFERTA CREADA</label> por ${transaccion.fields.amount} tokens</span><br>`);
                                else
                                    App.Controls.transactionList.append(`<span><label class='transaction-type info-data'>RETIRO</label> de ${transaccion.fields.amount} tokens</span><br>`);
                            }
                        } catch(e){
                            console.error(e);
                            throw e;
                        }
                    },
                    getAccounts: function(){
                        const web3 = new Web3(Web3.givenProvider);
                        return web3.eth.getAccounts();
                    },
                },
                Requests: {
                    getTransctionsByAccount: function(account){
                        return $.ajax({
                            url: "{% url 'tokens:ajax-get-transactions' %}",
                            data: { account },
                            method: 'GET',
                        });
                    },
                },
            }
            App.init();
        })()
